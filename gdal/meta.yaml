{% set version = "3.2.1" %}

package:
  name: gdal-split
  version: {{ version }}

source:
  url: http://download.osgeo.org/gdal/{{ version }}/gdal-{{ version }}.tar.xz
  sha256: 6c588b58fcb63ff3f288eb9f02d76791c0955ba9210d98c3abd879c770ae28ea
  patches:
    # disable 12 bit jpeg on Windows as we aren't using internal jpeg
    - disable_jpeg12.patch  # [win]
    # Allow long ENVI lines (previous limit was 10,000 characters)
    - envi_line_length.patch

build:
  # Make a high build number so we don't conflict with packages on
  # the anaconda site.
  number: 104

requirements:
  build:
    - cmake  # [win]
    - pkg-config >=0.21  # [not win]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - perl
    - patch
    - make
    - m4
  host:
    - pip
    - blas
    - numpy {{ numpy }}
    - cfitsio
    - curl
    - expat
    - geos
    - geotiff
    - giflib  # [not win]
    - hdf4
    - hdf5 {{ hdf5 }}
    - icu
    - jpeg
    - libkml
    - libpng
    # Libpq pulls in readline version that conflicts with other packages
    # on Mac (at least 3/25/2020). We don't actually need this, so just
    # drop on OSX
    - libpq    # [not osx]
    - libspatialite
    - libtiff
    - libuuid  {{ libuuid }} # [linux]
    - libwebp-base
    - libxml2 {{ libxml2 }}
    - openjpeg
    - openssl
    - pcre
    # Not an actual dependency, but we get a conflict with gnuplot
    - pango
    - proj
    - sqlite
    - xerces-c
    - xz
    - zlib
    - zstd
    
outputs:
  - name: libgdal
    script: install_lib.sh  # [unix]
    script: install_lib.bat  # [win]
    build:
      run_exports:
        # no idea, going with minor pin
        - {{ pin_subpackage('libgdal', max_pin='x.x') }}
    requirements:
      build:
        # ranlib used at install time
        - {{ compiler('c') }}
        # libstdc++ is needed in requirements/run
        - {{ compiler('cxx') }}
        - perl
        - patch
        - make
        - m4
        - pkg-config  # [not win]
      host:
        - pip
        - blas
        - numpy {{ numpy }}
        - cfitsio
        - curl
        - expat
        - geos
        - geotiff
        - giflib  # [not win]
        - hdf4
        - hdf5 {{ hdf5 }}
        - icu
        - jpeg
        - libkml
        - libpng
        - libpq    # [not osx]
        - libspatialite
        - libtiff
        - libuuid  {{ libuuid }} # [linux]
        - libwebp-base
        - libxml2 {{ libxml2 }}
        - openjpeg
        - openssl
        - pcre
        - proj
        - sqlite
        - xerces-c
        - xz
        - zlib
        - zstd
      run:
        # Conda defaulted to pinning the major number only. We did a
        # ldd and grabbed things with multiple levels. We cmpared to
        # the default levels in repodata_from_packages.json. This won't really
        # get everything, but is at least a first cut. Mostly we just
        # need to fix things as they break
        - blas
        - hdf5
        - icu
        - openjpeg
        - cfitsio
        - geotiff
        - giflib  # [not win]
        - libpq    # [not osx]
        - libspatialite
        - libuuid  {{ libuuid }} # [linux]
        - libwebp-base
        - proj
        - xerces-c
        - xz
        - zstd
    about:
      summary: The Geospatial Data Abstraction Library (GDAL)

  - name: gdal
    script: install_python.sh  # [unix]
    script: install_python.bat  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - perl
        - patch
        - make
        - m4
        - cmake  # [win]
      host:
        - python
        - pip
        - blas
        - numpy {{ numpy }}
        # Newer setup tools causes an error (see https://stackoverflow.com/questions/69123406/error-building-pygdal-unknown-distribution-option-use-2to3-fixers-and-use-2).
        # This will probably get fixed at some point, but for now hold this
        # to an older version. Note this constraint is only for the
	# build environment, the install doesn't care what version we have.
        - setuptools <=58.0
        - {{ pin_subpackage('libgdal', exact=True) }}
      run:
        - python
        - {{ pin_compatible('numpy') }}
        - {{ pin_subpackage('libgdal', exact=True) }}
      about:
        summary: Python wrapper for the Geospatial Data Abstraction Library (GDAL)

about:
  home: http://www.gdal.org
  license: MIT
  license_file: LICENSE.TXT
  summary: |
    GDAL is a translator library for raster and vector geospatial data formats that is released under an
    X/MIT style Open Source license by the Open Source Geospatial Foundation.

extra:
  recipe-maintainers:
    - gillins
    - kmuehlbauer
    - mingwandroid
    - msarahan
    - ocefpaf
    - xylar
